version: '3'

services:
  postgres-user:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=userdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-promocode:
    image: postgres:14
    container_name: postgres-promocode
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=promocodedb
    ports:
      - "5433:5432"
    volumes:
      - postgres_promocode_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-service:
    build: ./user-service
    container_name: user-service
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      postgres-user:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=userdb
      - JWT_SECRET=super_secret_key
      - PORT=8081
    networks:
      - app-network

  api-service:
    build: ./api-service
    container_name: api-service
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - promocode-api
    environment:
      - USER_SERVICE_URL=http://user-service:8081
      - PROMOCODE_SERVICE_URL=http://promocode-api:8082
      - PORT=8080
    networks:
      - app-network

  promocode-grpc:
    build:
      context: ./promocodes-service
      dockerfile: Dockerfile.grpc
    container_name: promocode-grpc
    restart: always
    ports:
      - "50051:50051"
    depends_on:
      postgres-promocode:
        condition: service_healthy
    environment:
      - DB_HOST=postgres-promocode
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=promocodedb
      - GRPC_PORT=50051
    networks:
      - app-network

  promocode-api:
    build:
      context: ./promocodes-service
      dockerfile: Dockerfile.api
    container_name: promocode-api
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - promocode-grpc
    environment:
      - GRPC_SERVER_ADDR=promocode-grpc:50051
      - PORT=8082
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    name: postgres_data_new
  postgres_promocode_data:
    name: postgres_promocode_data
